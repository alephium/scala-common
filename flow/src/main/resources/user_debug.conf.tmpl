akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  io.tcp.register-timeout = 1m

  actor {
    default-dispatcher {
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-factor = 0.5
      }
      throughput = 1
    }

    mining-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-factor = 0.5
      }
      throughput = 1
    }

    flow-handler-dispatcher {
      type = "PinnedDispatcher"
      executor = "thread-pool-executor"
      thread-pool-executor.allow-core-timeout = off
    }

    guardian-supervisor-strategy = "org.alephium.util.DefaultStrategy"

    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      unhandled = on
    }

    default-dispatcher.mailbox-requirement = "org.alephium.monitoring.MonitoringMailboxSemantics"
    mailbox.requirements { "org.alephium.monitoring.MonitoringMailboxSemantics" = monitoring-mailbox }
  }
}

monitoring-mailbox {
  mailbox-type = "org.alephium.monitoring.MonitoringMailbox"
}

alephium {
  numZerosAtLeastInHash = 0
  blockTargetTime = 4 minutes
  blockConfirmNum = 10
  retargetInterval = 180 // number of blocks; about 12 hours

  port = 9973
  port = ${?port}
  groups = 32
  groups = ${?groups}
  pingFrequency = 300 second
  retryTimeout = 300 second

  nonceStep = 10000

  mainGroup = ${?mainGroup}

  discovery {
    publicAddress = "localhost"
    publicAddress = ${?publicAddress}
    udpPort = ${alephium.port}
    peersPerGroup = 16
    scanMaxPerGroup = 8
    scanFrequency = 120.seconds
    scanFastFrequency = 10.seconds
    neighborsPerGroup = 8
  }

  rpc {
    network.interface = "127.0.0.1"
    blockflowFetch.maxAge = 30 minutes
  }

  bootstrap=""
  bootstrap = ${?bootstrap}
}

